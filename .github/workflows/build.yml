name: Build

on:
  push:
    tags: ["v*"]
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SOLUTION: src/Delta.CertXplorer.sln
  BUILD_CONFIGURATION: Release

defaults:
  run: 
    shell: cmd

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Dump Environment
      run: |
        echo "Solution        : ${{ env.SOLUTION }}" 
        echo "Configuration   : ${{ env.BUILD_CONFIGURATION }}"
      # Java 11 is needed by Sonar analyzer    
    - name: Setup Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        java-package: jdk
        architecture: x64      
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # See https://github.com/GitTools/GitVersion/issues/2301            
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner    
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner            
    # - name: Setup .NET Core
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: 3.1.101
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.5
      with:
          versionSpec: '5.x' 
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.5
    # - name: Install SonarScanner
    #   run: dotnet tool install --global dotnet-sonarscanner
    - name: Restore
      run: dotnet restore "${{ env.SOLUTION }}" --configfile ./nuget.config
    - name: Begin Sonar Analysis
      run: .\.sonar\scanner\dotnet-sonarscanner begin /key:"odalet_CertXplorer" /name:"CertXplorer" /version:"${{ steps.gitversion.outputs.majorMinorPatch }}" /organization:"odalet" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.verbose=true /d:sonar.host.url=https://sonarcloud.io
    - name: Build Windows .NET 4.7.2
      run: msbuild "${{ env.SOLUTION }}" /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:RestorePackages=false /p:OutputPath=${{ github.workspace }}/build/
    - name: End Sonar Analysis
      run: .\.sonar\scanner\dotnet-sonarscanner /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Collect Windows .NET 4.7.2 executable
      uses: actions/upload-artifact@v2
      with:
        name: CertXplorer
        path: ${{ github.workspace }}/build/*
    ###########################################
    # Release creation / publication
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false    
    - name: Zip Windows .NET 4.7.2 executable
      if: startsWith(github.ref, 'refs/tags/v') 
      run: 7z a ${{ github.workspace }}/build/CertXplorer.zip ${{ github.workspace }}/build/*.*        
    - name: Upload Windows .NET 4.7.2 executable to Release
      if: startsWith(github.ref, 'refs/tags/v') 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{ github.workspace }}/build/CertXplorer.zip
        asset_name: CertXplorer.zip
        asset_content_type: application/zip
