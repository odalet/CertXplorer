<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA4
        EAAAAk1TRnQBSQFMAgEBBAEAARQBAAEUAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ALQAAbcBogGTAWMBSQE1AWMBSQE1
        AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1GAABtwGi
        AZMBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATVsAAG3AaIBkwH3AeUB3AG3
        AaIBkwG3AaIBkwG3AaIBkwG3AaIBkwG3AaIBkwG3AaIBkwG3AaIBkwG3AaIBkwG3AaIBkwFjAUkBNRgA
        AbcBogGTAfUB3gHTAdcByAHAAdQBwwG6AdABvQG0AcwBuAGuAckBtAGoAWMBSQE1BgABdQGEAY8BbAF6
        AYUBYAFtAXcBUQFdAWYBQgFMAVQBMQE6AUEBIwEqATABFgEcASEBDgETARgBDgETARgBDgETARgBDgET
        ARgBDgETARgBDgETARgBDgETARgDAAF1AYQBjwFmAYABjwFgAXkBhwFXAW4BewFOAWIBbwFEAVYBYQE5
        AUgBUgEuAToBQwElAS4BNQEbASIBKQEUARkBHgEOARIBFgEOARMBGA8AAbcBogGTAfkB6QHiAfgB5gHd
        AfcB4gHYAfUB3gHTAfQB2wHOAfMB1wHKAfIB1AHFAfEB0AHBAfABzQG8AbcBogGTAWMBSQE1EgABtwGi
        AZMBYwFJATUBtwGiAZMB9wHkAdsB2AFqATIByAFhASwBtQFWAScBogFOASQBzQG5Aa8BYwFJATUGAAF3
        AYcBkgGiAd8B8AFwAc0B6gFJAbgB4gE3Aa4B2wEtAakB2QEmAaEB0gEhAZgBxwEgAY4BvAEeAYMBrgEZ
        AX8BqwEVAXwBqQEbAXcBnwEfAXIBlgEWARwBIQMAAXcBhwGSAYkBoQGrAWoBsgHUAQABjwHNAQABjwHN
        AQABjwHNAQQBjAHHAQgBiAG+AQ8BggG0ARUBfAGpARsBdwGfAR8BcgGWASIBSwFcDwABtwGiAZMB+QHu
        AegB+AHqAeMB+AHmAd4B9wHjAdkB9QHfAdUB9QHbAdAB8wHYAcsB8gHVAcYB8QHRAcIBtwGiAZMBYwFJ
        ATUSAAG3AaIBkwH1Ad4B0wG7AaYBlwH5AekB4gH4AeUB3QH2AeIB2AH1Ad8B0wH0AdsBzgHSAcABtgFj
        AUkBNQYAAXoBigGVAaoB6AH2AZUB5QH8AYQB3wH7AXUB1gH6AWoB0AH3AV0BxgH0AVABvgHwAUEBtAHs
        ATUBqgHoASsBpAHmASABmgHfARYBkAHXARsBdwGfASABJwEtAwABegGKAZUBfgG+AdMBigGkAa4BfgHc
        Af8BXwHPAf8BVQHLAf8BTAHEAfoBQQG8AfUBNwGzAfABLgGqAesBJAGgAeUBEwGMAdQBIwFnAYABXgFp
        AW0MAAG3AaIBkwH7AfIB7QHqAZoBcQHqAY8BYAHqAYMBTwHnAXgBQAHeAW4BNgHRAWYBLwHBAV0BKgHz
        AdUBxwG3AaIBkwFjAUkBNQwAAbcBogGTAWMBSQE1AbcBogGTAfcB5AHbAcEBqwGcAfoB7wHqAdgBagEy
        AcgBYQEsAbUBVgEnAaIBTgEkAdcBxwG+AWMBSQE1BgABfQGOAZgBsAHqAfYBnwHpAfsBkgHkAfwBgQHd
        AfsBdQHWAfoBaAHOAfcBXQHGAfQBTQG8AfABQQG0AewBNQGqAegBKgGjAeYBHQGWAdwBFQF8AakBLQE0
        ATsDAAF9AY4BmAF5AdIB7AGLAaQBrQGJAcIBzgFxAdgB/wFlAdMB/wFcAc4B/wFRAckB/gFJAcEB+gE/
        AbkB9QE0AbAB7gEpAagB6QEQAYUBzQEiAUsBWwwAAbcBogGTAfwB9gHzAfsB8gHuAfsB7wHqAfkB6wHm
        AfkB6AHhAfcB5QHbAfYB4QHXAfQB3gHTAfMB2gHNAbcBogGTAWMBSQE1DAABtwGiAZMB9QHeAdMBuwGm
        AZcB+QHpAeIBxwGyAaMB/AH0AfAB+wHwAewB+gHtAecB+AHqAeMB9wHmAd0B3AHOAcYBYwFJATUGAAGA
        AZEBnAG2Ae0B+AGqAewB+wGbAegB+wGPAeMB/AGBAd0B+wFxAdUB+QFoAc4B9wFbAcUB9AFNAbwB8AE9
        AbIB7AEyAakB6AEkAZ4B4gEQAYIBtAE7AUMBSwMAAYABkQGcAYEB1wHvAX0BxQHgAYwBpgGwAYAB3QH+
        AWgB0wH/AWcB1AH/AWIB0QH/AVgBzQH/AU4BxwH8AUYBvgH3ATsBtgHyATEBrAHsASUBaQGBAXoBlQGh
        CQABugGlAZYB/QH5AfYB6gGZAXIB6gGPAWEB6gGDAU8B5wF4AUAB3gFvATYB0gFmAS8BwQFdASsB9QHf
        AdMBtwGiAZMBYwFJATUMAAG3AaIBkwH3AeQB2wHBAasBnAH6Ae8B6gHPAbkBqQH9AfkB9gHYAWoBMgHI
        AWEBLAG1AVYBJwGiAU4BJAHhAdQBzgFkAUoBNgYAAYMBlQGfAb4B8AH5AasB8AH3AaUB7AH7AZgB5wH7
        AYkB4QH8AX8B3QH7AXEB1QH5AWUBzQH3AVgBxAHzAUsBuwHwAT0BsgHsASwBpAHjAQwBigG/AUkBUwFc
        AwABgwGVAZ8BiQHcAfEBjAHiAf8BjQGoAbEBjAG6AccBdAHYAf8BZwHUAf8BZwHUAf8BZwHUAf8BXwHQ
        Af8BVAHNAf8BSwHFAfwBQQG7AfcBLgGiAdsBUQFnAXQJAAG+AakBmgH+AfwB+wH9AfkB+AH9AfcB9AH8
        AfQB8AH7AfEB7QH6Ae4B6AH4AeoB5AH3AecB3wH2AeIB2gG3AaIBkwFjAUkBNQwAAbsBpgGXAfkB6QHi
        AccBsgGjAfwB9AHwAdQBvgGvAf4B/AH7Af0B+gH4AfwB9wH1AfwB9AHxAfsB8QHsAeUB2wHWAWMBSQE1
        BgABhgGZAaMBvgHwAfkBtgHtAfgBsAHuAfoBpAHrAfoBlQHmAfsBiQHhAfwBfQHcAfwBcQHVAfkBZQHN
        AfcBWAHEAfMBSQG5Ae8BNQGpAecBDAGPAccBVwFjAWsDAAGGAZoBowGSAeEB8gGYAegB/QGAAcQB3gGO
        AacBsAGBAd4B/QGEAeAB/wGEAeAB/wGEAeAB/wGEAeAB/wGBAd8B/wF7Ad0B/wF0AdgB/wFrAdYB/wFW
        AakB0QGPAZsBpAYAAcMBrgGeA/4B6gGaAXEB6gGPAWAB6gGEAU8B5gF4AT8B3wFvATYB0gFmATABwQFd
        ASoB+AHoAd8BtwGiAZMBYwFJATUMAAHBAasBnAH6Ae8B6gHPAbkBqQH9AfkB9gHYAcIBsgH/Av0B/wL9
        Af4B/AH5Af0B+QH2AfwB9QHzAfsB8gHvAWQBSgE2BgABiQGcAaYBvgHwAfkBtgHtAfgBtgHtAfgBqwHw
        AfcBogHsAfoBlQHmAfsBiQHhAfwBfQHcAfwBbwHTAfoBYwHMAfcBVQHDAfMBSQG5Ae8BGQGZAc8BYwFw
        AXoDAAGIAZwBpQGaAeYB8wGfAesB+wGYAegB/gGLAawBuQGLAawBuQGKAaoBtwGIAaYBswGGAaMBrwGD
        AZ8BqgGBAZoBpgF/AZUBoQF8AZEBnQF6AY4BmQF5AYsBlQF3AYgBkwYAAcgBsgGjB/8B/QH8Af0B+wH5
        Af0B+QH2AfwB9QHyAfsB8gHuAfsB7wHqAfkB7AHmAbcBogGTAWMBSQE1DAABxwGyAaMB/AH0AfAB1AG+
        Aa8B/gH8AfsB2AHCAbIB2AHCAbIB1AG/Aa4B2AHCAbIB2AHCAbIB2AHCAbIB2AHCAbIB1AG/Aa4GAAGL
        AaABqAG+AfAB+QG+AfAB+QG+AfAB+QG+AfAB+QG0AfIB+AGqAewB+wGgAekB+wGVAeUB/AGKAd8B/AF/
        AdgB+wF0AdIB+AFoAcoB9AFdAcAB8QFjAXABegMAAYsBoAGoAaAB6gH2AaYB7gH5AZ8B6wH7AZgB6AH+
        AXoB2gH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/AXcBiAGTDwABzAG2AacD/wHq
        AZoBcgHqAY4BYAHqAYMBTwHmAXgBQAHeAW4BNgH8AfYB8wH7AfQB7wG3AaIBkwG3AaIBkwFkAUoBNgwA
        Ac8BuQGpAf0B+QH2AdgBwgGyAf8C/QH/Av0B/gH8AfkB/QH5AfYB/AH1AfMB+wHyAe8BZAFKATYMAAGN
        AaEBqgGNAaEBqgGNAaEBqgGNAaEBqgGNAaEBqgGLAZ8BqAGJAZwBpgGJAZsBpgGHAZoBpAGGAZkBowGE
        AZYBoAGEAZYBoAGDAZUBoAGDAZUBoAF1AYQBjwMAAY4BogGrAacB7gH2AasB8AH3AaYB7gH5AZ8B6wH7
        AZgB6AH9AXEB1AH7AYkBngGnAYYBmQGjAYIBlAGfAX4BkAGaAXoBjAGXAXcBiAGTDwAB0QG7AasN/wH+
        Af0B/gL7Af0B+QH4AbcBogGTAWQBSgE2AWQBSgE2AWQBSgE2DAAB1AG+Aa8B/gH8AfsB2AHCAbIB2AHC
        AbIB1AG/Aa4B2AHCAbIB2AHCAbIB2AHCAbIB2AHCAbIB1AG/Aa4MAAGPAaQBrAGyAeQB7AG2Ae0B+AG2
        Ae0B+AGpAewB9gGSAeEB8wGNAaEBqhsAAY8BpAGsAaAB0gHaAasB8AH3AasB8AH3AaYB7gH5AZ8B6wH7
        AY0BoQGqIQAB1QG/Aa8Q/wP+AfwB+wG5AaQBlQHUAcUBugFjAUkBNQGyAVsBUQwAAdgBwgGyAf8C/QH/
        Av0B/gH8AfkB/QH5AfYB/AH1AfMB+wHyAe8BZAFKATYVAAGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrAGP
        AaQBrCEAAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsJAAB2AHCAbIU/wH+AcABqwGcAWMBSQE1
        AbMBXAFQDwAB2AHCAbIB2AHCAbIB1AG/Aa4B2AHCAbIB2AHCAbIB2AHCAbIB2AHCAbIB1AG/Aa54AAHY
        AcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHUAb4BrgHPAbkBqQHJAbMBpAHOAWIBWcwA
        AUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/+BAAb/AcABAwH8AQME/wHAAQMB/AED
        AQABAQEAAQcBwAEDAfABAwEAAQEBAAEHAcABAwHwAQMBAAEBAQABAwHAAQMBwAEDAQABAQEAAQMBwAED
        AcABAwEAAQEBAAEBAcABAwHAAQMBAAEBAQABAQHAAQMBwAEDAQABAQIAAcABAwHAAQMBAAEBAgABwAED
        AcABAwEAAQEBAAEHAcABAwHAAQ8BAAEBAQABBwHAAQMBwAEPAQEB/wEBAf8BwAEDAcABPwGDAf8BgwH/
        AcABBwHAAT8E/wHAAQ8I/ws=
</value>
  </data>
  <metadata name="mstrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <metadata name="actions.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>198, 17</value>
  </metadata>
  <metadata name="openAction.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>284, 17</value>
  </metadata>
  <metadata name="closeAction.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>391, 17</value>
  </metadata>
</root>